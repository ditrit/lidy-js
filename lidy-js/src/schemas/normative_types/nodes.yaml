tosca_definitions_version: tosca_simple_yaml_1_2

metadata:
  template_name:    node_types
  template_author:  ditrit
  template_version: "1.0"
  titi: toto
  tata: tutu

imports:
  - datatypes.yaml
  - capabilities.yaml
  - relationships.yaml

description: TOSCA 1.2 normative types definition, node types part
#url: http://docs.oasis-open.org/tosca/TOSCA-Simple-Profile-YAML/v1.2/csprd01/TOSCA-Simple-Profile-YAML-v1.2-csprd01.html


node_types:
  
  #section: 5.9.1 tosca.nodes.Root
  tosca.nodes.Root:
    derived_from: tosca.entity.Root
    description: The TOSCA Node Type all other TOSCA base Node Types derive from

    attributes:
      tosca_id:
        type: string
      tosca_name:
        type: string
      state:
        type: string

    capabilities:
      feature:
        type: tosca.capabilities.Node

    requirements:
      - dependency:
          capability: tosca.capabilities.Node
          node: tosca.nodes.Root
          relationship: tosca.relationships.DependsOn
          occurrences: [ 0, unbounded ]

    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard

    workflows:
      install:
        steps:
          install_sequence:
            activities:
             - set_state: creating
             - call_operation: tosca.interfaces.node.lifecycle.Standard.create
             - set_state: created
             - set_state: configuring
             - call_operation: tosca.interfaces.node.lifecycle.Standard.configure
             - set_state: configured
             - set_state: starting
             - call_operation: tosca.interfaces.node.lifecycle.Standard.start
             - set_state: started
      uninstall:
        steps:
          uninstall_sequence:
            activities:
              - set_state: stopping
              - call_operation: tosca.interfaces.node.lifecycle.Standard.stop
              - set_state: stopped
              - set_state: deleting
              - call_operation: tosca.interfaces.node.lifecycle.Standard.delete
              - set_state: deleted

  #section: 5.9.2 tosca.nodes.Abstract.Compute
  tosca.nodes.Abstract.Compute:
    derived_from: tosca.nodes.Root
    capabilities:
      host:
        type: tosca.capabilities.Compute
        valid_source_types: [ ]
  
  
  #section: 5.9.3 tosca.nodes.Compute
  tosca.nodes.Compute:
    derived_from: tosca.nodes.Abstract.Compute
    attributes:
      private_address:
        type: string
      public_address:
        type: string
      networks:
        type: map
        entry_schema:
          type: tosca.datatypes.network.NetworkInfo
      ports:
        type: map
        entry_schema:
          type: tosca.datatypes.network.PortInfo
    requirements:
      - local_storage:
          capability: tosca.capabilities.Attachment
          node: tosca.nodes.BlockStorage
          relationship: tosca.relationships.AttachesTo
          occurrences: [0, UNBOUNDED] 
    capabilities:
      host:
        type: tosca.capabilities.Compute
        valid_source_types: [tosca.nodes.SoftwareComponent]
      endpoint:
        type: tosca.capabilities.Endpoint.Admin
      os:
        type: tosca.capabilities.OperatingSystem
      scalable:
        type: tosca.capabilities.Scalable
      binding:
        type: tosca.capabilities.network.Bindable
  
  
  #section: 5.9.4 tosca.nodes.SoftwareComponent
  tosca.nodes.SoftwareComponent:
    derived_from: tosca.nodes.Root
    properties:
      # domain-specific software component version
      component_version:
        type: version
        required: false
      admin_credential:
        type: tosca.datatypes.Credential
        required: false
    requirements:
      - host:
          capability: tosca.capabilities.Compute
          node: tosca.nodes.Compute
          relationship: tosca.relationships.HostedOn
  
  #section: 5.9.5 tosca.nodes.WebServer
  tosca.nodes.WebServer:
    derived_from: tosca.nodes.SoftwareComponent
    capabilities:
      # Private, layer 4 endpoints
      data_endpoint: tosca.capabilities.Endpoint
      admin_endpoint: tosca.capabilities.Endpoint.Admin
      host:
        type: tosca.capabilities.Compute
        valid_source_types: [ tosca.nodes.WebApplication ]
  
  
  #section: 5.9.6 tosca.nodes.WebApplication
  tosca.nodes.WebApplication:
    derived_from: tosca.nodes.Root
    properties:
      context_root:
        type: string
    capabilities:
      app_endpoint:
        type: tosca.capabilities.Endpoint
    requirements:
      - host:
          capability: tosca.capabilities.Compute
          node: tosca.nodes.WebServer
          relationship: tosca.relationships.HostedOn
  
  
  #section: 5.9.7 tosca.nodes.DBMS
  tosca.nodes.DBMS:
    derived_from: tosca.nodes.SoftwareComponent
    properties:
      root_password:
        type: string
        required: false
        description: the optional root password for the DBMS service
      port:
        type: integer
        required: false
        description: the port the DBMS service will listen to for data and requests
    capabilities:   
      host:
        type: tosca.capabilities.Compute
        valid_source_types: [ tosca.nodes.Database ]
  
  
  #section: 5.9.8 tosca.nodes.Database
  tosca.nodes.Database:
    derived_from: tosca.nodes.Root
    properties:
      name:
        type: string
        description: the logical name of the database
      port:
        type: integer
        description: the port the underlying database service will listen to for data
      user:
        type: string
        description: the optional user account name for DB administration
        required: false
      password:
        type: string
        description: the optional password for the DB user account
        required: false
    requirements:
      - host:
          capability: tosca.capabilities.Compute
          node: tosca.nodes.DBMS
          relationship: tosca.relationships.HostedOn
    capabilities:
      database_endpoint:
        type: tosca.capabilities.Endpoint.Database
  
  
  #section: 5.9.9 tosca.nodes.Storage.Abstract.Storage
  tosca.nodes.Abstract.Storage:
    derived_from: tosca.nodes.Root
    properties:
      name:
        type: string
      size:
        type: scalar-unit.size
        default: 0 MB
        constraints:
          - greater_or_equal: 0 MB
    #capabilities:
      
  
  #section: 5.9.10 tosca.nodes.Storage.ObjectStorage
  tosca.nodes.Storage.ObjectStorage:
    derived_from: tosca.nodes.Abstract.Storage
    properties:
      maxsize:
        type: scalar-unit.size
        constraints:
          - greater_or_equal: 0 GB
    capabilities:
      storage_endpoint:
        type: tosca.capabilities.Endpoint
  
  #section: 5.9.11 tosca.nodes.Storage.BlockStorage
  tosca.nodes.Storage.BlockStorage:
    derived_from: tosca.nodes.Abstract.Storage
    properties:
      volume_id:
        type: string
        required: false
      snapshot_id:
        type: string
        required: false
    capabilities:
      attachment:
        type: tosca.capabilities.Attachment
  
  #section: 5.9.12 tosca.nodes.Container.Runtime
  tosca.nodes.Container.Runtime:
    derived_from: tosca.nodes.SoftwareComponent
    capabilities:
      host:
        type: tosca.capabilities.Compute
        valid_source_types: [ tosca.nodes.Container.Application ]
      scalable:
        type: tosca.capabilities.Scalable
  
  #section: 5.9.13 tosca.nodes.Container.Application
  tosca.nodes.Container.Application:
    derived_from: tosca.nodes.Root
    requirements:
      - host:
          capability: tosca.capabilities.Compute
          node: tosca.nodes.Container.Runtime
          relationship: tosca.relationships.HostedOn
      - storage:
          capability: tosca.capabilities.Storage
      - network:
          capability: tosca.capabilities.Endpoint
  
  #section: 5.9.14 tosca.nodes.LoadBalancer
  tosca.nodes.LoadBalancer:
    derived_from: tosca.nodes.Root
    properties:
      algorithm:
        type: string
        required: false
        status: experimental
    capabilities:
      client:
        type: tosca.capabilities.Endpoint.Public
        occurrences: [0, UNBOUNDED] 
        description: the Floating (IP) clientâ€™s on the public network can connect to
    requirements:
      - application:
          capability: tosca.capabilities.Endpoint
          relationship: tosca.relationships.RoutesTo
          occurrences: [0, UNBOUNDED] 
          description: >
            Connection to one or more 
               load balanced 
              applications
  
  
