
unbounded:
  _in: ["unbounded"]

namespace: string

description: string

range:
  _list: [scalarOrUnbounded, scalarOrUnbounded]

metadata:
  _mapFacultative:
    template_version: version
    template_author: string
    template_name: string
  _mapOf: { string: string }

version:
  _regex: '^[0-d]+(\.[0-d]+(\.[0-9]+(.[a-zA-Z0-9_]+(\-[0-9]+)?)?)?)?$'

url:
  _regex: '^(https?:\\/\\/)?((([a-z\\d]([a-z\\d_-]*[a-z\\d])*)\\.?)+[a-z\\d_-]{2,}|((\\d{1,3}\\.){3}\\d{1,3}))(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*(\\?[;&a-z\\d%_.~+=-]*)?(\\#[-a-z\\d_]*)?$'

size: scalar_unit.size
scalar_unit.size:
  _regex: '((?<sign>[+-]) *)?(?<value>[0-9]+(\.[0-9]+)?) *(?<unit>B|kB|KiB|MB|MiB|GB|GiB|TB|TiB)$'

time: scalar_unit.time
scalar_unit.time:
  _regex: '((?<sign>[+-]) *)?(?<value>[0-9]+(\.[0-9]+)?) *(?<unit>d|h|m|s|ms|us|ns)$'

frequency: scalar_unit.frequency
scalar_unit.frequency:
  _regex: '((?<sign>[+-]) *)?(?<value>[0-9]+(\.[0-9]+)?) *(?<unit>Hz|kHz|MHz|GHz)$'

bitrate: scalar_unit.bitrate
scalar_unit.bitrate:
  _regex: '((?<sign>[+-]) *)?(?<value>[0-9]+(\.[0-9]+)?) *(?<unit>bps|Kbps|Kibps|Mbps|Mibps|Gbps|Gibps|Tbps|Tibps|Bps|KBps|KiBps|MBps|MiBps|GBps|GiBps|TBps|TiBps)$'

string_value_expresion:
  _oneOf:
    - string
    - value_expression

scalar:
  _oneOf:
    - int
    - float
    - frequency
    - bitrate
    - time
    - size
    - timestamp

scalarOrUnbounded:
  _oneOf:
    - scalar
    - unbounded

value:
  _oneOf:
    - boolean
    - int
    - float
    - version
    - range
    - frequency
    - bitrate
    - time
    - size
    - timestamp
    - string
    - { _listOf: any }
    - { _mapOf: { any: any } }
    - nullType

value_expression:
  _max: 1
  _mapFacultative:
    concat:               value_expression.concat
    get_input:            value_expression.get_input
    get_nodes_of_type:    value_expression.get_nodes_of_type
    token:                value_expression.token
    join:                 value_expression.join
    get_property:         value_expression.get_property
    get_attribute:        value_expression.get_attribute
    get_operation_output: value_expression.get_operation_output
    get_artifact:         value_expression.get_artifact

value_expression.concat:
  _list: [string_value_expression]

value_expression.get_input:
  _oneOf: [string, { _listOf: string, _min: 1 }]

value_expression.get_nodes_of_type: string

value_expression.token:
  _list: [string_value_expression, string, int]

value_expression.join:
  _oneOf:
    - _list: [{ _listOf: string_value_expression }]
    - _list: [{ _listOf: string_value_expression }, string]

value_expression.get_property:
  _list: [string, string]
  _listOf: { _oneOf: [int, string] }
  _min: 3

value_expression.get_attribute:
  _list: [string, string]
  _listOf: { _oneOf: [int, string] }
  _min: 3

value_expression.get_operation_output:
  _list: [string, string, string, string]

value_expression.get_artifact:
  _oneOf:
    - _list: [string, string, boolean]
    - _list: [string, string, string, boolean]

import:
    _oneOf:
      - string
      - _nb: 1
        _mapOf: { string: string }
      - _nb: 1
        _mapOf: { string: import.target }
 
import.target:
  _map:
    file: string
  _mapFacultative:
    repository: string
    namespace_prefix: string
    namespace_uri: string

imports:
  _listOf: import
  _min: 1

constraint:
  _max: 1
  _mapFacultative:
    equal: value
    greater_than: value
    greater_or_equal: value
    less_than: value
    less_or_equal: value
    in_range: range
    valid_values: { _listOf: any }
    length: int
    min_length: int
    max_length: int
    pattern: string
    schema: string

constraints:
  _listOf: constraint
  _min: 1

entry_schema:
  _oneOf:
    - string
    - _map:
        type: string
      _mapFacultative:
        description: description
        constraints: constraints
        entry_schema: entry_schema

parameter_assignment:
  _oneOf:
    - value_expression
    - value
    - _mapFacultative:
        description: description
        value: { _oneOf: [value_expression, value] }

property:
  _map:
    type: string
  _mapFacultative:
    description: description
    constraints: constraints
    required: boolean
    default: value
    status: { _in: [supported, unsupported, experimental, deprecated, optional] }
    metadata: metadata
    entry_schema: entry_schema

properties:
  _mapOf: { string: property }

property_assignments:
  _mapOf: { string: parameter_assignment }

attribute:
  _map:
    type: string
  _mapFacultative:
    description: description
    default: value
    status: { _in: [supported, unsupported, experimental, deprecated, optional] }
    entry_schema: entry_schema

attributes:
  _mapOf: { string: attribute }

attribute_assignments:
  _mapOf: { string: parameter_assignment }

input_parameter:
  _map:
    type: string
  _mapFacultative:
    description: description
    constraints: constraints
    required: boolean
    default: value
    status: { _in: [supported, unsupported, experimental, deprecated, optional] }
    entry_schema: entry_schema
    value: { _oneOf: [value, value_expression] }

input_parameters:
  _mapOf: { string: input_parameter }

input_assignments:
  _mapOf: { string: parameter_assignment }

output_parameter:
  _mapFacultative:
    type: string
    description: description
    constraints: constraints
    required: boolean
    default: value
    status: { _in: [supported, unsupported, experimental, deprecated, optional] }
    entry_schema: entry_schema
    value: { _oneOf: [value, value_expression] }

output_parameters:
  _mapOf: { string: output_parameter }

repository:
  _oneOf:
    - string
    - _map:
        url: string
      _mapFacultative:
        description: description
        credential:
          _map:
            token: string
          _mapFacultative:
            protocol: string
            token_type: string
            user: string

repositories:
  _mapOf: { string: output_parameter }

artifact_def:
  _oneOf:
    - string
    - _map:
        type: string
        file: string
      _mapFacultative:
        description: description
        repository: string
        deploy_path: string
        version: version
        checksum: string
        checksum_algorithm: string
        properties: property_assignments

artifact_defs:
  _mapOf: { string: artifact_def }

type_common_keys:
  _mapFacultative:
    derived_from: string
    version: version
    metadata: metadata
    description: description

artifact_type:
  _mapFacultative:
    file_ext: { _listOf: string, _min: 1 }
    mime_type: string
    properties: properties
  _merge: [ type_common_keys ]

artifact_types:
  _mapOf: { string: artifact_type }

data_type:
  _mapFacultative:
    properties: properties
    constraints: constraints
    key_schema: entry_schema
    entry_schema: entry_schema
  _merge: [ type_common_keys ]

data_types:
  _mapOf: { string: data_type }

implementation:
  _oneOf:
    - string
    - _mapFacultative:
        primary:
          _oneOf: [string, artifact_def]
        dependencies:
          _listOf: { _oneOf: [string, artifact_def] }
          _min: 1

operation_def:
  _oneOf:
    - string
    - _mapFacultative:
        description: description
        inputs: properties
        implementation: implementation

operation_def_template:
  _oneOf:
    - string
    - _mapFacultative:
        description: description
        inputs: input_assignments
        implementation: implementation

interface_type:
  _mapFacultative:
    inputs: properties
  _mapOf:
    string: operation_def
  _merge:  [ type_common_keys ]

interface_types:
  _mapOf: { string: interface_type }

interface_def:
  # _map:
  #   type: string
  _mapFacultative:
    type: string
    inputs: properties
  _mapOf:
    string: operation_def

interface_defs:
  _mapOf: { string: interface_def }

interface_assignment:
  _mapFacultative:
    inputs: property_assignments
  _mapOf:
    string: operation_def_template

interface_assignments:
  _mapOf: { string: interface_assignment }

capability_type:
  _mapFacultative:
    properties: properties
    attributes: attributes
    valid_source_types: { _listOf: string, _min: 1 }
  _merge: [ type_common_keys ]

capability_types:
  _mapOf: { string: capability_type }

capability_def:
  _oneOf:
    - _map:
        type: string
      _mapFacultative:
        description: description
        properties: properties
        attributes: attributes
        valid_source_types: { _listOf: string }
        occurrences: range
    - string

capability_defs:
  _mapOf: { string: capability_def }

capability_assignment:
  _mapFacultative:
    properties: property_assignments
    attributes: attribute_assignments
    occurences: range

capability_assignments:
  _mapOf: { string: capability_assignment }

property_filter:
  _nb: 1
  _mapOf:
    string:
      _oneOf:
        - constraint
        - value
        - _listOf:
            _oneOf: [constraint, value]
          _min: 1

properties_filter:
  _listOf:
    property_filter

capability_filter:
  _nb: 1
  _mapOf:
    string: { _mapFacultative: { properties: properties_filter } }

capabilities_filter:
  _listOf:
    capability_filter

node_filter:
  _mapFacultative:
    properties: properties_filter
    capabilities: capabilities_filter

relationship_def:
  _oneOf:
    - string
    - _mapFacultative:
        type: string
        interfaces: interface_defs

requirement_def:
  _nb: 1
  _mapOf:
    string:
      _oneOf:
        - string
        - _map:
            capability: string
          _mapFacultative:
            description: description
            node: string
            occurrences: range
            relationship: relationship_def

requirement_defs:
  _listOf:
    requirement_def

relationship_assignment:
  _oneOf:
    - string
    - _mapFacultative:
        type: string
        properties: property_assignments
        interfaces: interface_defs_template

requirement_assignment:
  _nb: 1
  _mapOf:
    string:
      _oneOf:
        - string
        - _mapFacultative:
            node: string
            relationship: { _oneOf: [string, relationship_assignment] }
            capability: string
            occurrences: range
            node_filter: node_filter

requirement_assignments:
  _listOf:
    requirement_assignment

workflow_condition_operator:
  _nb: 1
  _mapFacultative:
    or: workflow_condition_clause
    and: workflow_condition_clause
    not: workflow_condition_clause
    assert: workflow_condition_clause
  _mapOf:
    string: constraints

workflow_condition_clause:
  _listOf: workflow_condition_operator
  _min: 1

workflow_preconditions:
  _listOf: workflow_precondition
  _min: 1

workflow_precondition:
  _mapFacultative:
    target: string
    target_relationship: string
    condition: workflow_condition_clause

workflow_activities:
  _listOf: workflow_activity
  _min: 1

workflow_activity:
  _nb: 1
  _mapFacultative:
    delegate: workflow_activity.inline
    set_state: workflow_activity.state
    call_operation: workflow_activity.call_operation
    inline: workflow_activity.inline

workflow_activity.inline:
  _oneOf:
    - string
    - _map:
        workflow: string
      _mapFacultative:
        inputs: input_assignments

workflow_activity.call_operation:
  _oneOf:
    - string
    - _map:
        operation: string
      _mapFacultative:
        inputs: input_assignments

workflow_activity.state:
  _in: [initial, creating, created, configuring, configured, starting, started, stopping, stopped, deleting, deleted, error]

declarative_workflow_steps:
  _mapOf:
    string: declarative_workflow_step

imperative_workflow_steps:
  _mapOf:
    string: imperative_workflow_step

declarative_workflow_step:
  _map:
    activities: workflow_activities
  _mapFacultative:
    filter: workflow_condition_clause
    operation_host: string
    on_succes:
      _oneOf: [string, { _listOf: string, _min: 1 }]
    on_failure:
      _oneOf: [string, { _listOf: string, _min: 1 }]

imperative_workflow_step:
  _map:
    target: string
    activities: workflow_activities
  _mapFacultative:
    target_relationship: string
    filter: workflow_condition_clause
    operation_host: string
    on_succes:
      _oneOf: [string, { _listOf: string, _min: 1 }]
    on_failure:
      _oneOf: [string, { _listOf: string, _min: 1 }]

workflow_source_weaving_list:
  _listOf: workflow_source_weaving
  _min: 1

workflow_source_weaving:
  _mapFacultative:
    after: string
    before: string
    wait_target: string
    after_target: string
    activity: string

workflow_target_weaving_list:
  _listOf: workflow_target_weaving
  _min: 1

workflow_target_weaving:
  _mapFacultative:
    after: string
    before: string
    wait_source: string
    after_source: string
    activity: string

declarative_workflow_node_defs:
  _mapOf:
    string: declarative_workflow_node_def

declarative_workflow_node_def:
  _mapFacultative:
    description: description
    metadata: metadata
    inputs: properties
    preconditions: workflow_preconditions
    steps: declarative_workflow_steps

declarative_workflow_rel_defs:
  _mapOf:
    string: declarative_workflow_rel_def

declarative_workflow_rel_def:
  _mapFacultative:
    description: description
    metadata: metadata
    inputs: properties
    preconditions: workflow_preconditions
    source_weaving: workflow_source_weaving_list
    target_weaving: workflow_target_weaving_list

imperative_workflow_defs:
  _mapOf:
    string: imperative_workflow_def

imperative_workflow_def:
      _mapFacultative:
        description: description
        metadata: metadata
        inputs: properties
        preconditions: workflow_preconditions
        steps: imperative_workflow_steps

node_type:
  _mapFacultative:
    properties: properties
    attributes: attributes
    capabilities: capability_defs
    requirements: requirement_defs
    interfaces: interface_defs
    workflows: declarative_workflow_node_defs
    artifacts: artifact_defs
  _merge: [ type_common_keys ]

node_types:
  _mapOf: { string: node_type }

node_template:
  _merge:
    - _oneOf:
      - _map:
          type: string
      - _map:
          copy: string
  _mapFacultative:
    metadata: metadata
    description: description
    directives: { _list: [ string ] }
    properties: property_assignments
    attributes: attribute_assignments
    capabilities: capability_assignments
    requirements: requirement_assignments
    interfaces: interface_assignments
    artifacts: artifact_defs
    node_filter: node_filter

node_templates:
  _mapOf: { string: node_template }

relationship_type:
  _mapFacultative:
    properties: properties
    attributes: attributes
    interfaces: interface_defs
    valid_target_types: { _listOf: string, _min: 1 }
    workflows: declarative_workflow_rel_defs
  _merge: [ type_common_keys ]

relationship_types:
  _mapOf: { string: relationship_type }

relationship_template:
  _merge:
    - _oneOf:
      - _map:
          type: string
      - _map:
          copy: string
  _mapFacultative:
    description: description
    metadata: metadata
    properties: properties
    attributes: attributes
    interfaces: interface_assignments

relationship_templates:
  _mapOf: { string: relationship_template }

group_type:
  _mapFacultative:
    properties: properties
    capabilities: capability_defs
    requirements: requirement_defs
    interfaces: interface_defs
    members: { _listOf: string, _min: 1 }
  _merge: [ type_common_keys ]

group_types:
  _mapOf: { string: group_type }

group_def:
  _map:
    type: string
  _mapFacultative:
    description: description
    properties: property_assignments
    members: { _listOf: string, _min: 1 }
    interfaces: interface_assignments

group_defs:
  _mapOf: { string: group_def }

event:
  _oneOf:
    - string
    - _mapFacultative:
        type: string

target_filter:
  _mapFacultative:
    node: string
    requirement: string
    capability: string

trigger_def:
  _nb: 1
  _mapOf: { string: trigger_def.value }

trigger_def.value:
  _mapFacultative:
    description: description
    event: event
    schedule: value
    target_filter: target_filter
    condition:
        _oneOf:
          - constraint
          - _mapFacultative: { constraint: constraint }
    period: string
    evaluations: int
    method: string
    action: { _oneOf: [string, operation_def] }

trigger_defs:
  _listOf: trigger_def
  _min: 1

policy_type:
  _mapFacultative:
    properties: properties
    targets: { _listOf: string, _min: 1 }
    triggers: trigger_defs
  _merge: [ type_common_keys ]

policy_types:
  _mapOf: { string:  policy_type }

policy_defs:
  _listOf: policy_def
  _min: 1

policy_def:
  _nb: 1
  _mapOf:
    string:
      _mapFacultative:
        type: string
        description: description
        properties: property_assignments
        targets: { _listOf: string, _min: 1 }
        triggers: trigger_defs

properties_mapping:
  _mapOf:
    string: property_mapping

property_mapping:
  _oneOf:
    - value
    - value_expression
    - _listOf: string
      _min: 1
      _max: 3
    - _nb: 1
      _mapFacultative:
        mapping:
          _oneOf: [string, { _max: 3, _listOf: string }]
        value:
          _oneOf: [value, value_expression]

attributes_mapping:
  _mapOf:
    string: attribute_mapping

attribute_mapping:
  _oneOf:
    - value
    - value_expression
    - _listOf: string
      _min: 1
      _max: 3
    - _nb: 1
      _mapFacultative:
        mapping:
          _oneOf: [string, { _max: 3, _listOf: string }]
        value:
          _oneOf: [value, value_expression]

capabilities_mapping:
  _mapOf:
    string: capability_mapping

capability_mapping:
  _oneOf:
    - { _listOf: string, _min: 1, _max: 2 }
    - _mapFacultative:
        mapping: { _oneOf: [string, { _listOf: string, _nb: 2 }] }
        properties: property_assignments
        attributes: attribute_assignments

requirements_mapping:
  _mapOf:
    string: requirement_mapping

requirement_mapping:
  _oneOf:
    - { _listOf: string, _min: 1, _max: 2 }
    - _mapFacultative:
        mapping: { _oneOf: [string, { _listOf: string, _min: 1, _max: 3 }] }
        properties: property_assignments
        attributes: attribute_assignments

interfaces_mapping:
  _mapOf:
    string: interface_mapping

interface_mapping:
  _nb: 1
  _mapOf:
    string: string

substitution_mappings:
  _map:
    node_type: string
  _mapFacultative:
    substitution_filter: node_filter
    properties: properties_mapping
    capabilities: capabilities_mapping
    requirements: requirements_mapping
    attributes: attributes_mapping
    interfaces: interfaces_mapping

topology_template:
  _mapFacultative:
    description: description
    inputs: input_parameters
    outputs: output_parameters
    node_templates: node_templates
    relationship_templates: relationship_templates
    groups: group_defs
    policies: policy_defs
    substitution_mappings: substitution_mappings
    workflows: imperative_workflow_defs

service_template:
  _map:
    tosca_definitions_version: string
  _mapFacultative:
    description: description
    namespace: namespace
    metadata: metadata
    repositories: repositories
    imports: imports
    artifact_types: artifact_types
    data_types: data_types
    capability_types: capability_types
    interface_types: interface_types
    relationship_types: relationship_types
    node_types: node_types
    group_types: group_types
    policy_types: policy_types
    topology_template: topology_template
